{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/events/": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Gets all the events from the DB",
        "description": "Gets all the events from the DB",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "description": "Filter by event name (partial match)",
            "in": "query",
            "type": "string",
            "default": "jazz"
          },
          {
            "name": "startDate",
            "description": "Filter events with start date greater than or equal to this date (YYYY-MM-DD)",
            "in": "query",
            "type": "string",
            "format": "date",
            "default": "2025-01-10"
          },
          {
            "name": "endDate",
            "description": "Filter events with end date less than or equal to this date (YYYY-MM-DD)",
            "in": "query",
            "type": "string",
            "format": "date",
            "default": "2025-05-10"
          },
          {
            "name": "minCapacity",
            "description": "Filter events with minimum capacity",
            "in": "query",
            "type": "integer",
            "default": 50
          },
          {
            "name": "page",
            "description": "Pagination offset",
            "in": "query",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "description": "Pagination limit",
            "in": "query",
            "type": "integer",
            "default": 5
          },
          {
            "name": "sort",
            "description": "Sort by fields (e.g., name:asc,date:desc)",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Event records were successfully retrieved from the DB."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create a new Event in the DB.",
        "description": "Creates a new Event.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Event has been created successfully"
          },
          "400": {
            "description": "Invalid input provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieve a record from the DB, by Id.",
        "description": "Retrieve a record from the DB, by Id.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the Event to be retrieved",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Event has been retrieved successfully"
          },
          "400": {
            "description": "Invalid Id provided"
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Update a record in the DB, by Id.",
        "description": "Update a record in the DB, by Id.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the Event to be updated"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update an Event",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Event has been updated successfully"
          },
          "400": {
            "description": "Invalid input provided"
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete a record from the DB, by Id.",
        "description": "Delete a record from the DB, by Id.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Id of the Event to be deleted"
          }
        ],
        "responses": {
          "204": {
            "description": "Event has been deleted successfully"
          },
          "400": {
            "description": "Invalid Id provided"
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Tech Conference 2025"
        },
        "date": {
          "type": "string",
          "example": "2025-05-15"
        },
        "location": {
          "type": "string",
          "example": "Oslo Convention Center"
        },
        "capacity": {
          "type": "number",
          "example": 500
        },
        "isOnline": {
          "type": "boolean",
          "example": false
        },
        "createdAt": {
          "type": "string",
          "example": "2025-03-03T16:50:42.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2025-03-03T16:50:42.000Z"
        }
      },
      "required": [
        "id",
        "name",
        "date",
        "location",
        "capacity",
        "isOnline",
        "createdAt",
        "updatedAt"
      ]
    }
  }
}